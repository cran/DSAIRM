"QuizID"	"AppID"	"AppTitle"	"TaskID"	"TaskText"	"RecordID"	"Record"	"Type"	"Note"
"DSAIRM_basicbacteriaexploration"	"basicbacteriaexploration"	"Bacteria Model Exploration"	1	"Set initial bacteria to 100 and immune response to 10. Set bacteria growth rate to 2. The value does actually not matter since we'll be exploring the simulation for different values of _g_. Assume that bacteria live for a day, set the death rate accordingly (remember to convert duration to rate). Set carrying capacity to 10^5^. Set both the rate at which bacteria are killed by the immune response (IR) and the rate at which IR is activated and grows to 10^-4^. Set immune response decay rate to 2. Choose _g_ as the parameter to vary, go from 2 to 10, do 10 different parameter values/samples, linear spacing, and no log scales for plotting. Set maximum simulation time to 300. Run simulation, check to ensure all simulations reach steady state (see output message below plot). Then, reduce simulation time to 20 days; note some simulations did not reach steady state and how that affects results."	"T1R1"	"Number of simulations that did not reach steady state for _tfinal_=20."	"Integer"	"Report the integer"
"DSAIRM_basicbacteriaexploration"	"basicbacteriaexploration"	"Bacteria Model Exploration"	2	"Set simulation time back to 300, leave everything else the same. Play around with the number of parameter samples. A higher number gives you a more detailed plot, but it also means the simulation runs more often and it takes longer. Next, explore how changing the minimum and maximum of the parameter range you scan over changes the results. Then, explore how spacing of parameter values (linear versus log) changes results. Compare and contrast that with plotting results on a linear versus log scale. 


Think a bit about the results you see in the plot for the different outcomes. Would you have expected that as the bacteria growth rate increases, the peak bacteria load first increases, but then levels off? What about the fact that the steady state value for the bacteria does not change as the growth rate changes? And that the immune response peak and steady state both increase, even though the parameter you vary is the bacteria growth rate. Is that surprising? At this point, you might want to go back to the steady state tasks of the Basic Bacteria app and compare what you found there with what you see here. You should expect the mathematical expressions and the numerical results to agree. You can use the mathematical expression to check the result you are asked to report and read off from the plot."	"T2R1"	"__Bsteady__ for pretty much all values of _g_"	"Integer"	"Report the integer"
"DSAIRM_basicbacteriaexploration"	"basicbacteriaexploration"	"Bacteria Model Exploration"	3	"As you learned in the ***Basic Bacteria Model*** app, this model is simple enough that we can compute the steady states mathematically, without needing to run simulations. However, even for a simple model like this, one can't write down similarly simple equations for the maximum of __B__ and __I__. You can take a look at the model equations and diagram and see if by thinking through them, you can understand why you got the results for the peak values you find when running the simulations. With enough practice, it is often possible to intuit specific results based on the underlying equations, but that requires a good bit of modeling practice. As models get more complicated, even experienced modelers can often not intuit what model behavior one should expect as specific parameters vary. Often the only way to find out is by actually running the simulations. Let's explore this a bit for a different parameter. 


Reset all inputs to their defaults. Then, set the parameter to vary to be *d~I~*. Choose 1 to 10 as the range for the parameter, 20 samples. For the __Bsteady__ and __Isteady__ values, you can compare the results with the mathematical expressions. For the peak values, you can try to intuit what you might expect _B~peak~_ and _I~peak~_ do as you increase _d~I~_ based on looking at the model equations. You can then check by running the simulations. You'll see that _I~peak~_ stays at 10 (the initial value) above _d~I~ = 5_. Try to understand what is going on here. Also, as _d~I~_ increases,  _B~steady~_ approaches _B~peak~_ and both reach and remain at the same value. Try to understand why that is. (Hint: At high _d~I~_, the immune response is so small it has no more effect in the dynamics of the bacteria.)."	"T3R1"	"__Bsteady__ for values of _d~I~_ > 5 (get it from plotly plot)"	"Integer"	"Report the integer"
"DSAIRM_basicbacteriaexploration"	"basicbacteriaexploration"	"Bacteria Model Exploration"	4	"Do the same explorations you did above for any other parameter you want to investigate. Note that here we focus on a single parameter at a time. With some coding effort, we could change the underlying simulation to loop over say 2 parameters and produce outcomes for sets of parameter values, e.g. _B~peak~_ as a function of _g_ and _r_. The results could be plotted as a 2-dimensional heatmap. While this could be extended to more than 2 parameters, it will become hard to visualize and long to run. If there are many parameters that could change, a different approach is useful; you'll learn more about this in the ***Uncertainty and Sensitivity Analysis*** app."	"T4R1"	"Nothing"	"None"	""
